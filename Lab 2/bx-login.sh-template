#!/bin/bash
# Information steps:
# 1) chmod u+x git-commit.sh
# 2) ./git-commit.sh

#API_ENDPOINT="https://api.eu-de.bluemix.net"
#SPACE_NAME="YOUR-CF-SPACE"
API_ENDPOINT="https://api.eu-gb.bluemix.net"
SPACE_NAME="OUR-CF-SPACE"

IBMCLOUD_CLI_DEVOPS_PLATFORM_KEY="YOUR_PLATFORM_KEY"
USER_ID="YOUR-ID"
RESOURCE_GROUP="default"
ORGANIZATION_NAME="YOUR-ORG"

KUBEVERSION_INSTALL="kubernetes-cli"
BREW_KUBECLI_GITPAGE="https://github.com/Homebrew/homebrew-core/blob/master/Formula/kubernetes-cli.rb"

#CONTAINER_REGISTRY="registry.eu-de.bluemix.net"
CONTAINER_REGISTRY="registry.eu-gb.bluemix.net"
CONTAINER_NAMESPACE="YOUR_SPACE"
DOCKER_IMAGE_NAME="hello-world" #also used as service name
USER_HOME_DIRECTORY="YOUR_USER_HOME_DIRECTORY"

#CLUSTER_NAME="YOUR_CLOUSTER_DE"
#CLUSTER_REGION_SETTING="eu-central"
CLUSTER_NAME="YOUR_CLOUSTER_UK"
CLUSTER_REGION_SETTING="uk-south"

echo "**********************"
echo "******* LAB 2.3 ********"
echo "**********************"
echo ""
echo "IBM Cloud CLI login"
echo "*****************"
bx login -u $USER_ID  -o $ORGANIZATION_NAME -apikey $IBMCLOUD_CLI_DEVOPS_PLATFORM_KEY -s $SPACE_NAME -g $RESOURCE_GROUP -a $API_ENDPOINT
bx info
echo ""
echo "Logon to the container registry"
echo "*****************"
ibmcloud cr login
echo ""
echo "Add container registry name space $CONTAINER_NAMESPACE"
echo "*****************"
ibmcloud cr namespace-add $CONTAINER_NAMESPACE
echo ""
echo "List container registry name spaces"
echo "*****************"
ibmcloud cr namespace-list
echo "Set cluster region settings $CLUSTER_REGION_SETTING"
echo "*****************"
ibmcloud cs region-set $CLUSTER_REGION_SETTING
echo ""
echo "List clusters with cs"
echo "*****************"
ibmcloud cs clusters
echo ""
echo "List workers for cluster '$CLUSTER_NAME' "
echo "*****************"
ibmcloud ks workers $CLUSTER_NAME
echo ""
echo "Get the configuration information"
echo "*****************"
bx cs cluster-get $CLUSTER_NAME --json
echo ""
echo "Get cluster configuration for '$CLUSTER_NAME' "
echo "*****************"
ibmcloud cs cluster-config $CLUSTER_NAME -admin
echo ""
echo "Copy and past the cluster configuration export path"
echo "*****************"
echo ""
read CLUSTER_CONFIGURATION_PATH
echo ""
echo "Execution of the export"
echo "*****************"
$CLUSTER_CONFIGURATION_PATH
echo ""
echo "Show kubectl version"
echo "*****************"
kubectl version
echo "build container 2: '$CONTAINER_REGISTRY/$CONTAINER_NAMESPACE/$DOCKER_IMAGE_NAME:2'"
docker build --tag "$CONTAINER_REGISTRY/$CONTAINER_NAMESPACE/$DOCKER_IMAGE_NAME:2" "."
echo "push container 2: '$CONTAINER_REGISTRY/$CONTAINER_NAMESPACE/$DOCKER_IMAGE_NAME:2'"
docker push "$CONTAINER_REGISTRY/$CONTAINER_NAMESPACE/$DOCKER_IMAGE_NAME:2"
echo ""
echo "kubectl SET IMAGE deployment with for '$DOCKER_IMAGE_NAME' tag '$i'"
echo "** 'deployment/$DOCKER_IMAGE_NAME'"
echo "** '$CONTAINER_REGISTRY/$CONTAINER_NAMESPACE/$DOCKER_IMAGE_NAME:$i'"
echo "*****************"
# https://www.mankier.com/1/kubectl-set-image
kubectl set image "deployment/$DOCKER_IMAGE_NAME" "$DOCKER_IMAGE_NAME=$CONTAINER_REGISTRY/$CONTAINER_NAMESPACE/$DOCKER_IMAGE_NAME:2"
echo ""
echo "Getting the rollout status 'kubectl rollout status deployment/$DOCKER_IMAGE_NAME''"
echo "*****************"
kubectl rollout status deployment/$DOCKER_IMAGE_NAME
i=1
while [ "$STOP" != "$END" ]
do
  echo "--- While loop: ($((i++))) --"
  kubectl get replicasets
  echo "------"
  echo "Status of the replicasets '$DOCKER_IMAGE_NAME' are 'running' enter: 'stop' otherwise press 'enter'"
  read STOP
  echo ""
done
echo "Apply a new Configuration to Cluster $CLUSTER_NAME"
echo "*****************"
echo ""
kubectl apply -f "$USER_HOME_DIRECTORY/container-service-getting-started-wt/Lab 2/healthcheck.yml"
echo "Show the workers of the Cluster $CLUSTER_NAME"
echo "*****************"
echo ""
ibmcloud cs workers $CLUSTER_NAME
echo "Examine your new service"
echo "*****************"
echo ""
kubectl describe service $DOCKER_IMAGE_NAME
echo "Enter the NodePort value of the service $CLUSTER_NAME:"
read NODEPORT_VALUE
echo ""
echo "Now get the public IP from the running workers of the cluster $CLUSTER_NAME"
echo ""
ibmcloud cs workers $CLUSTER_NAME
echo ""
echo "Enter Public IP and press enter"
read PUBLIC_IP
echo ""
echo "Now the app is running on cluster $CLUSTER_NAME and you can access the app in the browser"
echo "Using 'http://$PUBLIC_IP:$NODEPORT_VALUE'"
echo "Press any key to open the browser"
echo "*****************"
read ANYKEY
open "http://$PUBLIC_IP:$NODEPORT_VALUE"
echo "Press any key to move on with the next lab"
echo "*****************"
read ANYKEY
